name: Build Custom Caddy for ARM with PowerDNS

on:
  schedule:
    - cron: "0 */6 * * *"
  workflow_dispatch:

jobs:
  build-arm:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Get latest Caddy version
        id: caddy
        run: |
          echo "version=$(curl -s https://api.github.com/repos/caddyserver/caddy/releases/latest | jq -r .tag_name)" >> $GITHUB_OUTPUT

      - name: Get latest PowerDNS commit hash
        id: powerdns
        run: |
          echo "sha=$(curl -s https://api.github.com/repos/caddy-dns/powerdns/commits/main | jq -r .sha)" >> $GITHUB_OUTPUT
      - name: Get latest commit from mholt/caddy-ratelimit
        id: ratelimit
        run: |
          echo "sha=$(curl -s https://api.github.com/repos/mholt/caddy-ratelimit/commits/master | jq -r .sha)" >> $GITHUB_OUTPUT

      - name: Define release tag
        id: tag
        run: |
          PDNS_SHORT=$(echo "${{ steps.powerdns.outputs.sha }}" | cut -c1-7)
          RLIM_SHORT=$(echo "${{ steps.ratelimit.outputs.sha }}" | cut -c1-7)
          TAG="${{ steps.caddy.outputs.version }}-pdns-${PDNS_SHORT}-rlim-${RLIM_SHORT}-arm64"
          echo "tag=$TAG" >> $GITHUB_OUTPUT
    
      - name: Check if release already exists
        id: release_check
        run: |
          exists=$(curl -s https://api.github.com/repos/${{ github.repository }}/releases/tags/${{ steps.tag.outputs.tag }} | jq -r .tag_name)
          if [[ "$exists" == "${{ steps.tag.outputs.tag }}" ]]; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Cancel if release already exists
        if: steps.release_check.outputs.exists == 'true'
        run: |
          echo "Release already exists, skipping build."
          exit 0

      - name: Install xcaddy
        run: go install github.com/caddyserver/xcaddy/cmd/xcaddy@latest

      - name: Build Caddy for ARM64 with PowerDNS and Rate_Limit
        run: |
          mkdir -p build
          GOOS=linux GOARCH=arm64 xcaddy build ${{ steps.caddy.outputs.version }} \
            --with github.com/caddy-dns/powerdns@${{ steps.powerdns.outputs.sha }} \
            --with github.com/mholt/caddy-ratelimit@${{ steps.ratelimit.outputs.sha }} \
            --output ./build/caddy-arm64

      - name: Upload ARM64 binary to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          name: "Caddy ${{ steps.caddy.outputs.version }} with PowerDNS and rate-limit modules (ARM64)"
          files: ./build/caddy-arm64
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}

